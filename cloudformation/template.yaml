AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy BirdTag audio tagging Lambda with ECR and S3 prefix trigger

Parameters:
  LambdaImageUri:
    Type: String
    Description: ECR image URI for Detect Audio Handler
  UploadImageUri:
    Type: String
    Description: ECR image URI for Upload Handler

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BirdTagUserPool
      AutoVerifiedAttributes:
        - email


  ## Audio Lambda Function
  BirdTagAudioLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: birdtag-audio-lambda
      Role: !GetAtt AudioLambdaExecutionRole.Arn
      Code:
        ImageUri: !Ref LambdaImageUri
      PackageType: Image
      Timeout: 300
      MemorySize: 1024
      Environment:
        Variables:
          TEMP_DIR: "/tmp"
          TABLE_NAME: "BirdTagMedia"
          SNS_TOPIC_ARN: !Ref BirdTagNotificationTopic

  ## Unified S3 Bucket with direct notification configuration
  BirdTagMediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "birdtag-media-${AWS::AccountId}"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: uploads/audio/
            Function: !GetAtt BirdTagAudioLambda.Arn

  ## Permission for S3 to invoke Audio Lambda
  S3InvokePermissionForAudio:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BirdTagAudioLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::birdtag-media-${AWS::AccountId}

  ## IAM Role for Audio Lambda
  AudioLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: birdtag-audio-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AudioLambdaExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - s3:GetObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Scan   
                Resource: !GetAtt BirdTagMediaTable.Arn
              - Effect: Allow
                Action:
                  - sns:Publish
                  - sns:Subscribe
                Resource: !Ref BirdTagNotificationTopic
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource: "*"

  ## Upload Lambda Function
  UploadHandlerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: generate-presigned-url-handler
      Role: !GetAtt UploadHandlerRole.Arn
      Code:
        ImageUri: !Ref UploadImageUri
      PackageType: Image
      Timeout: 30
      MemorySize: 256
      Environment:
        Variables:
          MEDIA_BUCKET: !Ref BirdTagMediaBucket

  ## IAM Role for Upload Lambda
  UploadHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: birdtag-upload-handler-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UploadHandlerExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource: "*"

  ## DynamoDB Table
  BirdTagMediaTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BirdTagMedia
      AttributeDefinitions:
        - AttributeName: file_id
          AttributeType: S
      KeySchema:
        - AttributeName: file_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ## SNS Topic
  BirdTagNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: birdtag-analysis-finished

  ## REST API
  BirdTagUploadApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: birdtag-upload-api
      EndpointConfiguration:
        Types: [REGIONAL]

  ## API Resource /upload
  UploadResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref BirdTagUploadApi
      ParentId: !GetAtt BirdTagUploadApi.RootResourceId
      PathPart: upload

  UploadPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirdTagUploadApi
      ResourceId: !Ref UploadResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref AWS::Region
            LambdaArn: !GetAtt UploadHandlerLambda.Arn
      MethodResponses:
        - StatusCode: 200

  ## API Resource /analyze-audio
  AnalyzeAudioResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref BirdTagUploadApi
      ParentId: !GetAtt BirdTagUploadApi.RootResourceId
      PathPart: analyze-audio

  AnalyzeAudioPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref BirdTagUploadApi
      ResourceId: !Ref AnalyzeAudioResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref AWS::Region
            LambdaArn: !GetAtt BirdTagAudioLambda.Arn
      MethodResponses:
        - StatusCode: 200

  ## Permission for API Gateway to invoke BirdTagAudioLambda
  AnalyzeAudioApiInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BirdTagAudioLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${BirdTagUploadApi}/*/POST/analyze-audio


  ## API Deployment
  UploadApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
      - UploadPostMethod
      - AnalyzeAudioPostMethod
    Properties:
      RestApiId: !Ref BirdTagUploadApi
      StageName: prod

  ## Permission for API Gateway to invoke Upload Lambda
  UploadApiLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref UploadHandlerLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${BirdTagUploadApi}/*/POST/upload

  BirdTagMediaBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BirdTagMediaBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPresignedUpload
            Effect: Allow
            Principal: "*"
            Action: "s3:PutObject"
            Resource: !Sub "${BirdTagMediaBucket.Arn}/uploads/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

 
Outputs:
  LambdaFunctionName:
    Description: Name of the created Lambda function
    Value: !Ref BirdTagAudioLambda

  MediaUploadBucket:
    Description: Unified media S3 bucket (audio, video, image)
    Value: !Ref BirdTagMediaBucket

  MediaTableName:
    Description: DynamoDB table name for audio metadata
    Value: !Ref BirdTagMediaTable

  NotifyTopicArn:
    Description: ARN of the SNS topic for completion notification
    Value: !Ref BirdTagNotificationTopic

  UploadHandlerFunctionName:
    Description: Upload Lambda Function Name
    Value: !Ref UploadHandlerLambda

  UploadApiEndpoint:
    Description: API Gateway endpoint to upload media
    Value: !Sub "https://${BirdTagUploadApi}.execute-api.${AWS::Region}.amazonaws.com/prod/upload"
